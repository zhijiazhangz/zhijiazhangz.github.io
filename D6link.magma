///K: CyclotomicField(3)
//P4<[y]>,P3<[x]>: Projectice Space of dimension 4 and 3 over K in variables y[1],...,y[5],and x[1],...,x[4]
//X4: Burkhardt quartic defined in P4: y[1]^4-y[1]*(y[2]^3+y[3]^3+y[4]^3+y[5]^3)+3*y[2]*y[3]*y[4]*y[5]
//QC: the quadric cone defined in P4
//configuration: the configuration on the quadric cone giving Burkhardt quartic
//l[1],..,l[6]: six lines in the configuration
//P[i]: the intersection point of l[i] and l[i+1]
//R,Rp: two conics
//fixedpoint: the intersection point of two conics i.e. a fixed point of the C6 action
//C6X4Matrix: linear C6 action on X4<P4 (matrix multiplication from the right)
//C6QCMatrix: linear C6 action on QC<P4 (matrix multiplication from the right), it sends point P[i] to P[i+1] and lines l[i] to l[i+1]
//C6P3Matrix: linear C6 action on P3 (matrix multiplication from the right)
//X4toQC: the C6-equivariant birational map from X4 to QC, with inverse QCtoX4
//QCtoX4: the C6-equivariant birational map from X4 to QC, with inverse X4toQC
//X4toP3: the C6-equivariant birational map from X4 to P3, with inverse P3toX4 (linearizes X4)
//P3toX4: the C6-equivariant birational map from X4 to P3, with inverse X4toP3
//QCtoP3: the projection of QC from C6-fixed point, with inverse P3toQC
//P3toQC: the C6-equivariant birational map from P3 to QC, with inverse QCtoP3
//C6X4:the C6-action (as a map) on X4
//C6QC:the C6-action (as a map) on the quadric cone
//C6P3:the C6-action (as a map) on P^3
//D6invX4:the C2-involution (as a map) in the D6-action on X4
//D6invX4Matrix:the C2-involution (as a matrix) in the D6-action on X4
//involutionQC: the C2-involution (as a map, not linear) on the quadric cone

 
//The following elements construct the D6-link to a (1,1) divisor in P2xP2 and to a smooth quadric:

//P2xP2: P2xP2, under the coordinates [x0,x1,x2]x[z0,z1,z2] 
//maptoP2xP2: the map from QC in P4 to P2xP2
//11DivisorInP2xP2: the image of QC under the maptoP2xP2, is a (1,1) divisor in P2xP2
//C6onfirstP2: the C6 action (as a matrix) on the first factor P2
//C6onsecondP2: the C6 action on the second factor P2
//the C2 action is the involution xi <-> zi, i=0,1,2
//C6p21: the C6 action (as a map) on the first factor P2
//C6p22: the C6 action (as a map) on the second factor P2
//mapfromP2xP2toP4: the birational map from P2xP2 to P4, realized as the compactification of the open subset in P2xP2: the complement of 3*x1-(3*e+2)*x2=3*z1-(3*e+2)*z2=0 
//Q the image of the (1,1) divisor in P2xP2 under the map mapfromP2xP2toP4: it is a smooth quadric
//C6onQ: the C6 action as a matrix on Q, note this is not the original C6-action we started with! It is just another order-6 element in the D6 action on Q. 
//C2onQ: the C2 action as a matrix on Q, note this is not the original C2-action we started with! It is just another order-2 element in the D6 action on Q.  
//D6onQ: the D6-action on Q as a matrix group in GL5
//NB: Change of coordinate matrix so that Q becomes y[2]*y[3] + 1/169*(66*zeta_6 - 69)*y[1]*y[4] + 1/2*(-6*zeta_6 + 3)*y[5]^2
//QNewBasis: the quadric Q under change of coordinate NB
//newC6: the C6-action on Q under change of coordinate NB
//newC2: the C2-action on Q under change of coordinate NB
//D6NewBasis: the D6-action on Q under change of coordinate NB as matrix group


K:=CyclotomicField(3);
P4<[y]>:=ProjectiveSpace(K,4);
P3<[x]>:=ProjectiveSpace(K,3);
PP3:=CoordinateRing(P3);
PP4:=CoordinateRing(P4);
e:=RootOfUnity(3);
 f1:=y[1]^3*y[2] - y[1]*y[2]^3 + (e + 1)*y[1]^2*y[3]^2 - e*y[1]*y[2]*y[3]^2 + e*y[1]*y[3]^3 + 
        (-e - 1)*y[1]^3*y[4] + e*y[1]^2*y[2]*y[4] + y[1]*y[2]^2*y[4] + (-e + 1)*y[1]^2*y[3]*y[4] - 
        y[1]*y[2]*y[3]*y[4] + (e + 1)*y[1]*y[3]^2*y[4] - e*y[1]^2*y[4]^2 - y[1]*y[2]*y[4]^2 + 
        y[1]*y[3]*y[4]^2 + 1/3*(-e + 1)*y[1]^3*y[5] - y[1]^2*y[2]*y[5] + (e + 1)*y[1]*y[2]^2*y[5] + 
        1/3*(-2*e - 1)*y[2]^3*y[5] + 1/3*(-e + 4)*y[1]^2*y[3]*y[5] + 1/3*(-e - 
        5)*y[1]*y[2]*y[3]*y[5] + 1/3*(5*e + 4)*y[2]^2*y[3]*y[5] + 1/3*(2*e + 4)*y[1]*y[3]^2*y[5] + 
        1/3*(-2*e - 4)*y[2]*y[3]^2*y[5] + 1/3*(-e - 2)*y[1]^2*y[4]*y[5] + 1/3*(-e - 
        2)*y[1]*y[2]*y[4]*y[5] + 1/3*(2*e + 1)*y[2]^2*y[4]*y[5] + 1/3*(-2*e - 1)*y[1]*y[3]*y[4]*y[5] + 
        1/3*(-4*e + 1)*y[2]*y[3]*y[4]*y[5] + 1/3*(-e - 2)*y[1]*y[4]^2*y[5] + 1/3*(-2*e - 
        1)*y[2]*y[4]^2*y[5] + 1/3*(-e - 2)*y[1]^2*y[5]^2 + 1/3*(5*e + 4)*y[1]*y[2]*y[5]^2 + 1/3*(-e 
        - 2)*y[2]^2*y[5]^2 + 1/3*(-2*e - 1)*y[1]*y[3]*y[5]^2 + 1/3*(2*e + 1)*y[2]*y[3]*y[5]^2 + 
        1/3*(e - 1)*y[1]*y[4]*y[5]^2 + 1/3*(-e - 2)*y[2]*y[4]*y[5]^2 + 1/3*(2*e + 1)*y[1]*y[5]^3 + 
        1/3*(e - 1)*y[2]*y[5]^3;
    f2:=y[1]^2*y[2]^2 - y[1]*y[2]^3 + e*y[1]^2*y[3]^2 - y[1]*y[3]^3 - e*y[1]^3*y[4] - y[1]^2*y[2]*y[4] + 
        (e + 1)*y[1]*y[2]^2*y[4] + (e + 1)*y[1]^2*y[3]*y[4] - y[1]*y[3]^2*y[4] + (e + 
        2)*y[1]^2*y[4]^2 + (-e - 1)*y[1]*y[2]*y[4]^2 + e*y[1]*y[3]*y[4]^2 + e*y[1]*y[4]^3 + 
        1/3*(e + 2)*y[1]^3*y[5] + (-e - 1)*y[1]^2*y[2]*y[5] + e*y[1]*y[2]^2*y[5] + 1/3*(-e + 
        1)*y[2]^3*y[5] + 1/3*(4*e + 2)*y[1]^2*y[3]*y[5] + 1/3*(-5*e - 4)*y[1]*y[2]*y[3]*y[5] + 
        1/3*(e - 1)*y[2]^2*y[3]*y[5] + 1/3*(e - 1)*y[1]*y[3]^2*y[5] + 1/3*(-e + 1)*y[2]*y[3]^2*y[5] 
        + 1/3*(e + 2)*y[1]^2*y[4]*y[5] + 1/3*(-5*e - 1)*y[1]*y[2]*y[4]*y[5] + 1/3*(e - 
        1)*y[2]^2*y[4]*y[5] + 1/3*(2*e - 2)*y[1]*y[3]*y[4]*y[5] + 1/3*(-5*e + 8)*y[2]*y[3]*y[4]*y[5] + 
        1/3*(e + 2)*y[1]*y[4]^2*y[5] + 1/3*(-e + 1)*y[2]*y[4]^2*y[5] + 1/3*(-2*e - 1)*y[1]^2*y[5]^2 
        + 1/3*(e - 1)*y[1]*y[2]*y[5]^2 + 1/3*(-2*e - 1)*y[2]^2*y[5]^2 + 1/3*(2*e + 
        1)*y[1]*y[3]*y[5]^2 + 1/3*(-2*e - 1)*y[2]*y[3]*y[5]^2 + 1/3*(-e + 1)*y[1]*y[4]*y[5]^2 + 
        1/3*(-2*e - 1)*y[2]*y[4]*y[5]^2 + 1/3*(e - 1)*y[1]*y[5]^3 + 1/3*(-e - 2)*y[2]*y[5]^3;
    f3:=y[1]^3*y[3] + (e + 1)*y[1]^2*y[3]^2 + 1/3*(-e + 1)*y[1]^3*y[4] + 1/3*(2*e + 1)*y[1]^2*y[2]*y[4] 
        + 1/3*(-e + 1)*y[1]*y[2]^2*y[4] + 1/3*(2*e + 4)*y[1]^2*y[3]*y[4] + 1/3*(e - 
        1)*y[1]*y[2]*y[3]*y[4] + 1/3*(2*e + 1)*y[1]*y[3]^2*y[4] + 1/3*(-e + 1)*y[1]^2*y[4]^2 + 
        1/3*(e - 1)*y[1]*y[2]*y[4]^2 + 1/3*(e + 2)*y[1]*y[3]*y[4]^2 + 1/3*(-e + 1)*y[1]*y[4]^3 + 
        1/3*(e + 2)*y[1]^2*y[2]*y[5] + 1/3*(e + 2)*y[1]*y[2]^2*y[5] + 1/3*(-2*e - 1)*y[2]^3*y[5] + 
        1/3*(e - 1)*y[1]*y[2]*y[3]*y[5] + 1/3*(2*e + 1)*y[2]^2*y[3]*y[5] + 1/3*(-2*e - 
        1)*y[2]*y[3]^2*y[5] + 1/3*(-e - 2)*y[1]^2*y[4]*y[5] + 1/3*(-e - 2)*y[1]*y[2]*y[4]*y[5] + 
        1/3*(2*e + 1)*y[2]^2*y[4]*y[5] + 1/3*(-2*e - 1)*y[1]*y[3]*y[4]*y[5] + 1/3*(-e - 
        2)*y[2]*y[3]*y[4]*y[5] + 1/3*(-2*e - 1)*y[1]*y[4]^2*y[5] + 1/3*(-2*e - 1)*y[2]*y[4]^2*y[5] + 
        1/3*(e - 1)*y[1]*y[2]*y[5]^2 + 1/3*(-e - 2)*y[2]^2*y[5]^2 + 1/3*(-e - 2)*y[2]*y[3]*y[5]^2 + 
        1/3*(-e - 2)*y[1]*y[4]*y[5]^2 + 1/3*(-e - 2)*y[2]*y[4]*y[5]^2 + 1/3*(e - 1)*y[2]*y[5]^3;
    f4:=y[1]^2*y[2]*y[3] + e*y[1]^2*y[3]^2 + (e + 1)*y[1]*y[2]*y[3]^2 - y[1]*y[3]^3 + 1/3*(-e + 
        1)*y[1]^3*y[4] + 1/3*(-e + 1)*y[1]^2*y[2]*y[4] + 1/3*(2*e + 1)*y[1]*y[2]^2*y[4] + 1/3*(5*e +
        4)*y[1]^2*y[3]*y[4] + 1/3*(e + 2)*y[1]*y[2]*y[3]*y[4] + 1/3*(2*e - 2)*y[1]*y[3]^2*y[4] + 
        1/3*(2*e + 4)*y[1]^2*y[4]^2 + 1/3*(-2*e - 1)*y[1]*y[2]*y[4]^2 + 1/3*(4*e + 
        2)*y[1]*y[3]*y[4]^2 + 1/3*(2*e + 1)*y[1]*y[4]^3 + (e + 1)*y[1]^3*y[5] + 1/3*(-2*e - 
        1)*y[1]^2*y[2]*y[5] + 1/3*(e + 2)*y[1]*y[2]^2*y[5] + 1/3*(-2*e - 1)*y[2]^3*y[5] + (2*e + 
        1)*y[1]^2*y[3]*y[5] + 1/3*(-5*e - 4)*y[1]*y[2]*y[3]*y[5] + 1/3*(2*e - 2)*y[2]^2*y[3]*y[5] + 
        e*y[1]*y[3]^2*y[5] + 1/3*(-5*e - 1)*y[2]*y[3]^2*y[5] + 1/3*(-e + 1)*y[1]^2*y[4]*y[5] + 
        1/3*(-4*e - 5)*y[1]*y[2]*y[4]*y[5] + 1/3*(2*e + 1)*y[2]^2*y[4]*y[5] + 1/3*(e + 
        2)*y[1]*y[3]*y[4]*y[5] + 1/3*(-7*e + 1)*y[2]*y[3]*y[4]*y[5] + 1/3*(-2*e + 2)*y[1]*y[4]^2*y[5] + 
        1/3*(-2*e - 1)*y[2]*y[4]^2*y[5] - e*y[1]^2*y[5]^2 + 1/3*(e - 4)*y[1]*y[2]*y[5]^2 + 
        1/3*(-e - 2)*y[2]^2*y[5]^2 + y[1]*y[3]*y[5]^2 + 1/3*(-e - 5)*y[2]*y[3]*y[5]^2 + 1/3*(-4*e - 
        2)*y[1]*y[4]*y[5]^2 + 1/3*(-e - 2)*y[2]*y[4]*y[5]^2 - y[1]*y[5]^3 + 1/3*(e - 1)*y[2]*y[5]^3;
    f5:=y[1]*y[2]^2*y[3] + y[1]^2*y[3]^2 + (e + 1)*y[1]*y[3]^3 + 1/3*(2*e + 1)*y[1]^3*y[4] + 1/3*(-e + 
        1)*y[1]^2*y[2]*y[4] + 1/3*(-e + 1)*y[1]*y[2]^2*y[4] + 1/3*(-e + 1)*y[1]^2*y[3]*y[4] + 1/3*(e
        - 1)*y[1]*y[2]*y[3]*y[4] + 1/3*(2*e + 4)*y[1]*y[3]^2*y[4] + 1/3*(-e - 2)*y[1]^2*y[4]^2 + 
        1/3*(e - 1)*y[1]*y[2]*y[4]^2 + 1/3*(-2*e + 2)*y[1]*y[3]*y[4]^2 + 1/3*(-e + 1)*y[1]*y[4]^3 + 
        y[1]^3*y[5] + 1/3*(e + 2)*y[1]^2*y[2]*y[5] + 1/3*(-2*e - 1)*y[1]*y[2]^2*y[5] + 1/3*(e - 
        1)*y[2]^3*y[5] + y[1]^2*y[3]*y[5] + 1/3*(e - 1)*y[1]*y[2]*y[3]*y[5] + 1/3*(2*e + 
        1)*y[2]^2*y[3]*y[5] + y[1]*y[3]^2*y[5] + 1/3*(-2*e - 4)*y[2]*y[3]^2*y[5] + 1/3*(-e - 
        2)*y[1]^2*y[4]*y[5] + 1/3*(5*e - 2)*y[1]*y[2]*y[4]*y[5] + 1/3*(-e + 1)*y[2]^2*y[4]*y[5] + 
        1/3*(-5*e - 1)*y[1]*y[3]*y[4]*y[5] + 1/3*(-4*e - 8)*y[2]*y[3]*y[4]*y[5] + 1/3*(-5*e - 
        4)*y[1]*y[4]^2*y[5] + 1/3*(e - 1)*y[2]*y[4]^2*y[5] + (-e - 1)*y[1]^2*y[5]^2 + 1/3*(4*e + 
        2)*y[1]*y[2]*y[5]^2 + 1/3*(2*e + 1)*y[2]^2*y[5]^2 + (-2*e - 1)*y[1]*y[3]*y[5]^2 + 1/3*(5*e +
        1)*y[2]*y[3]*y[5]^2 + 1/3*(-e - 5)*y[1]*y[4]*y[5]^2 + 1/3*(2*e + 1)*y[2]*y[4]*y[5]^2 + 
        e*y[1]*y[5]^3 + 1/3*(e + 2)*y[2]*y[5]^3;

 g1:=e*x[1]^5 + (-2*e + 1)*x[1]^4*x[2] + (3*e - 2)*x[1]^3*x[2]^2 +
        (-2*e + 3)*x[1]^2*x[2]^3 + (e - 2)*x[1]*x[2]^4 + x[2]^5 + 
        1/3*(-14*e - 1)*x[1]^4*x[3] + 1/3*(25*e - 1)*x[1]^3*x[2]*x[3] 
        + (-14*e + 2)*x[1]^2*x[2]^2*x[3] + 1/3*(28*e - 
        7)*x[1]*x[2]^3*x[3] + 1/3*(-17*e + 5)*x[2]^4*x[3] + 1/3*(26*e 
        + 7)*x[1]^3*x[3]^2 + 1/3*(-52*e - 41)*x[1]^2*x[2]*x[3]^2 + 
        1/3*(58*e + 8)*x[1]*x[2]^2*x[3]^2 + 1/3*(-47*e - 
        31)*x[2]^3*x[3]^2 + 1/3*(-10*e - 9)*x[1]^2*x[3]^3 + 1/3*(74*e 
        + 77)*x[1]*x[2]*x[3]^3 + 1/3*(-12*e - 31)*x[2]^2*x[3]^3 + 
        1/3*(-13*e + 17)*x[1]*x[3]^4 + 1/3*(-19*e - 22)*x[2]*x[3]^4 + 
        1/3*(6*e - 10)*x[3]^5 + 1/3*(e - 16)*x[1]^4*x[4] + 
        1/3*(-11*e + 26)*x[1]^3*x[2]*x[4] + (7*e - 
        13)*x[1]^2*x[2]^2*x[4] + 1/3*(-20*e + 23)*x[1]*x[2]^3*x[4] + 
        1/3*(10*e - 13)*x[2]^4*x[4] + (-e + 14)*x[1]^3*x[3]*x[4] + 
        1/3*(100*e - 10)*x[1]^2*x[2]*x[3]*x[4] + 1/3*(-103*e + 
        40)*x[1]*x[2]^2*x[3]*x[4] + 1/3*(103*e + 26)*x[2]^3*x[3]*x[4] + 
        1/3*(10*e - 1)*x[1]^2*x[3]^2*x[4] + (-80*e - 
        29)*x[1]*x[2]*x[3]^2*x[4] + 1/3*(98*e + 109)*x[2]^2*x[3]^2*x[4] + 
        1/3*(-38*e - 119)*x[1]*x[3]^3*x[4] + 1/3*(63*e + 
        35)*x[2]*x[3]^3*x[4] + 1/3*(36*e + 73)*x[3]^4*x[4] + 
        1/3*(-23*e - 22)*x[1]^3*x[4]^2 + 1/3*(-19*e + 
        40)*x[1]^2*x[2]*x[4]^2 + 1/3*(37*e - 31)*x[1]*x[2]^2*x[4]^2 + 
        (-14*e + 3)*x[2]^3*x[4]^2 + 1/3*(-7*e - 20)*x[1]^2*x[3]*x[4]^2
        + (55*e - 8)*x[1]*x[2]*x[3]*x[4]^2 + 1/3*(-146*e - 
        94)*x[2]^2*x[3]*x[4]^2 + 1/3*(152*e + 172)*x[1]*x[3]^2*x[4]^2 + 
        1/3*(-65*e - 34)*x[2]*x[3]^2*x[4]^2 + 1/3*(-120*e - 
        92)*x[3]^3*x[4]^2 + 1/3*(18*e + 26)*x[1]^2*x[4]^3 + 1/3*(-37*e
        + 8)*x[1]*x[2]*x[4]^3 + 1/3*(56*e + 12)*x[2]^2*x[4]^3 + 
        1/3*(-134*e - 81)*x[1]*x[3]*x[4]^3 + 1/3*(68*e + 
        50)*x[2]*x[3]*x[4]^3 + 1/3*(102*e + 26)*x[3]^2*x[4]^3 + 
        1/3*(40*e + 10)*x[1]*x[4]^4 + 1/3*(-34*e - 12)*x[2]*x[4]^4 + 
        1/3*(-40*e + 2)*x[3]*x[4]^4 + 1/3*(8*e - 4)*x[4]^5;
g2:=(-e - 1)*x[1]^5 + (3*e + 2)*x[1]^4*x[2] + (-5*e - 
        3)*x[1]^3*x[2]^2 + (5*e + 2)*x[1]^2*x[2]^3 + (-3*e - 
        1)*x[1]*x[2]^4 + e*x[2]^5 + 1/3*(13*e + 14)*x[1]^4*x[3] + 
        1/3*(-20*e - 31)*x[1]^3*x[2]*x[3] + (10*e + 
        14)*x[1]^2*x[2]^2*x[3] + 1/3*(-17*e - 28)*x[1]*x[2]^3*x[3] + 
        1/3*(10*e + 11)*x[2]^4*x[3] + 1/3*(-11*e - 16)*x[1]^3*x[3]^2 +
        1/3*(-e + 52)*x[1]^2*x[2]*x[3]^2 + 1/3*(16*e - 
        22)*x[1]*x[2]^2*x[3]^2 + (-2*e + 1)*x[2]^3*x[3]^2 + 1/3*(-19*e
        - 8)*x[1]^2*x[3]^3 + 1/3*(11*e - 8)*x[1]*x[2]*x[3]^3 + (e + 
        2)*x[2]^2*x[3]^3 + 1/3*(14*e + 7)*x[1]*x[3]^4 + 1/3*(-5*e - 
        1)*x[2]*x[3]^4 + 1/3*(-17*e - 1)*x[1]^4*x[4] + 1/3*(34*e + 
        5)*x[1]^3*x[2]*x[4] + (-20*e - 4)*x[1]^2*x[2]^2*x[4] + 
        1/3*(43*e + 11)*x[1]*x[2]^3*x[4] + 1/3*(-26*e - 7)*x[2]^4*x[4]
        + 1/3*(34*e + 2)*x[1]^3*x[3]*x[4] + 1/3*(-86*e - 
        94)*x[1]^2*x[2]*x[3]*x[4] + 1/3*(83*e + 70)*x[1]*x[2]^2*x[3]*x[4] +
        1/3*(-55*e - 62)*x[2]^3*x[3]*x[4] + (8*e - 
        3)*x[1]^2*x[3]^2*x[4] + 1/3*(64*e + 101)*x[1]*x[2]*x[3]^2*x[4] + 
        1/3*(-14*e - 40)*x[2]^2*x[3]^2*x[4] + (-12*e + 
        11)*x[1]*x[3]^3*x[4] + 1/3*(-16*e - 38)*x[2]*x[3]^3*x[4] + 
        1/3*(8*e - 11)*x[3]^4*x[4] + 10*x[1]^3*x[4]^2 + 1/3*(59*e + 
        7)*x[1]^2*x[2]*x[4]^2 + 1/3*(-77*e - 7)*x[1]*x[2]^2*x[4]^2 + 
        1/3*(77*e + 46)*x[2]^3*x[4]^2 + (-7*e + 1)*x[1]^2*x[3]*x[4]^2 
        + 1/3*(-175*e - 110)*x[1]*x[2]*x[3]*x[4]^2 + 1/3*(74*e + 
        115)*x[2]^2*x[3]*x[4]^2 + 1/3*(-17*e - 127)*x[1]*x[3]^2*x[4]^2 + 
        (18*e + 17)*x[2]*x[3]^2*x[4]^2 + 1/3*(31*e + 71)*x[3]^3*x[4]^2
        + 1/3*(17*e - 5)*x[1]^2*x[4]^3 + (28*e + 9)*x[1]*x[2]*x[4]^3 +
        1/3*(-83*e - 88)*x[2]^2*x[4]^3 + 1/3*(80*e + 
        139)*x[1]*x[3]*x[4]^3 + 1/3*(-40*e - 53)*x[2]*x[3]*x[4]^3 + 
        1/3*(-88*e - 80)*x[3]^2*x[4]^3 + 1/3*(-49*e - 59)*x[1]*x[4]^4 
        + (12*e + 18)*x[2]*x[4]^4 + 1/3*(62*e + 34)*x[3]*x[4]^4 + 
        1/3*(-22*e - 14)*x[4]^5;
g3:=(-e - 1)*x[1]^5 + 2*x[1]^4*x[2] + (e - 3)*x[1]^3*x[2]^2 + 
        (-4*e + 2)*x[1]^2*x[2]^3 + (3*e - 1)*x[1]*x[2]^4 - 
        2*e*x[2]^5 + 1/3*(10*e + 5)*x[1]^4*x[3] + 1/3*(13*e - 
        13)*x[1]^3*x[2]*x[3] + (-11*e - 1)*x[1]^2*x[2]^2*x[3] + 
        1/3*(43*e + 8)*x[1]*x[2]^3*x[3] + 1/3*(-20*e - 16)*x[2]^4*x[3]
        + 1/3*(-2*e + 11)*x[1]^3*x[3]^2 + 1/3*(-37*e - 
        11)*x[1]^2*x[2]*x[3]^2 + 1/3*(61*e + 50)*x[1]*x[2]^2*x[3]^2 + 
        (-2*e - 5)*x[2]^3*x[3]^2 + 1/3*(-10*e - 30)*x[1]^2*x[3]^3 + 
        1/3*(26*e + 44)*x[1]*x[2]*x[3]^3 + 1/3*(-18*e - 
        4)*x[2]^2*x[3]^3 + 1/3*(-3*e + 19)*x[1]*x[3]^4 + 1/3*(-27*e - 
        32)*x[2]*x[3]^4 + 1/3*(6*e - 10)*x[3]^5 + 1/3*(-2*e + 
        8)*x[1]^4*x[4] + 1/3*(-5*e + 14)*x[1]^3*x[2]*x[4] + (13*e - 
        1)*x[1]^2*x[2]^2*x[4] + 1/3*(-41*e + 11)*x[1]*x[2]^3*x[4] + 
        1/3*(34*e + 11)*x[2]^4*x[4] + 1/3*(-41*e - 
        52)*x[1]^3*x[3]*x[4] + 1/3*(52*e + 11)*x[1]^2*x[2]*x[3]*x[4] + 
        1/3*(-163*e - 62)*x[1]*x[2]^2*x[3]*x[4] + 1/3*(53*e + 
        52)*x[2]^3*x[3]*x[4] + 1/3*(100*e + 89)*x[1]^2*x[3]^2*x[4] + 
        (-37*e - 44)*x[1]*x[2]*x[3]^2*x[4] + 1/3*(53*e + 
        4)*x[2]^2*x[3]^2*x[4] + 1/3*(-57*e - 79)*x[1]*x[3]^3*x[4] + 
        1/3*(128*e + 87)*x[2]*x[3]^3*x[4] + 1/3*(26*e + 
        71)*x[3]^4*x[4] + (14*e + 7)*x[1]^3*x[4]^2 + 1/3*(-37*e - 
        5)*x[1]^2*x[2]*x[4]^2 + 1/3*(91*e - 4)*x[1]*x[2]^2*x[4]^2 + 
        1/3*(-67*e - 38)*x[2]^3*x[4]^2 + 1/3*(-124*e - 
        17)*x[1]^2*x[3]*x[4]^2 + (65*e + 43)*x[1]*x[2]*x[3]*x[4]^2 + 
        1/3*(-77*e - 37)*x[2]^2*x[3]*x[4]^2 + (35*e + 
        16)*x[1]*x[3]^2*x[4]^2 + 1/3*(-190*e - 68)*x[2]*x[3]^2*x[4]^2 + 
        1/3*(-101*e - 111)*x[3]^3*x[4]^2 + 1/3*(27*e - 
        37)*x[1]^2*x[4]^3 + 1/3*(-85*e - 25)*x[1]*x[2]*x[4]^3 + 
        1/3*(65*e + 48)*x[2]^2*x[4]^3 + 1/3*(-32*e + 
        30)*x[1]*x[3]*x[4]^3 + 1/3*(107*e + 38)*x[2]*x[3]*x[4]^3 + 
        1/3*(87*e + 56)*x[3]^2*x[4]^3 + 1/3*(-17*e - 17)*x[1]*x[4]^4 +
        1/3*(-37*e - 39)*x[2]*x[4]^4 + 1/3*(-11*e - 24)*x[3]*x[4]^4 + 
        22/3*x[4]^5;
g4:=x[1]^5 + (2*e - 3)*x[1]^4*x[2] + (-4*e + 5)*x[1]^3*x[2]^2 + 
        (6*e - 5)*x[1]^2*x[2]^3 + (-4*e + 3)*x[1]*x[2]^4 + (2*e -
        1)*x[2]^5 + 1/3*(4*e - 4)*x[1]^4*x[3] + 1/3*(-35*e + 
        11)*x[1]^3*x[2]*x[3] + (19*e + 2)*x[1]^2*x[2]^2*x[3] + 
        1/3*(-53*e - 10)*x[1]*x[2]^3*x[3] + 1/3*(22*e + 
        17)*x[2]^4*x[3] + 1/3*(-20*e - 13)*x[1]^3*x[3]^2 + 1/3*(53*e +
        10)*x[1]^2*x[2]*x[3]^2 + 1/3*(-56*e - 61)*x[1]*x[2]^2*x[3]^2 + 
        (4*e + 9)*x[2]^3*x[3]^2 + 1/3*(31*e + 30)*x[1]^2*x[3]^3 + 
        1/3*(9*e + 8)*x[1]*x[2]*x[3]^3 + 1/3*(-7*e + 26)*x[2]^2*x[3]^3
        + 1/3*(-25*e - 12)*x[1]*x[3]^4 + 1/3*(-38*e - 23)*x[2]*x[3]^4 
        + 1/3*(6*e - 10)*x[3]^5 + 1/3*(e + 8)*x[1]^4*x[4] + 
        1/3*(e - 52)*x[1]^3*x[2]*x[4] + (-11*e + 
        20)*x[1]^2*x[2]^2*x[4] + 1/3*(34*e - 52)*x[1]*x[2]^3*x[4] + 
        1/3*(-32*e + 8)*x[2]^4*x[4] + 1/3*(43*e + 2)*x[1]^3*x[3]*x[4] 
        + 1/3*(-56*e + 62)*x[1]^2*x[2]*x[3]*x[4] + 1/3*(143*e - 
        5)*x[1]*x[2]^2*x[3]*x[4] + 1/3*(-52*e - 50)*x[2]^3*x[3]*x[4] + 
        1/3*(-107*e - 13)*x[1]^2*x[3]^2*x[4] + (13*e + 
        10)*x[1]*x[2]*x[3]^2*x[4] + 1/3*(-16*e - 44)*x[2]^2*x[3]^2*x[4] + 
        1/3*(56*e - 40)*x[1]*x[3]^3*x[4] + 1/3*(72*e - 
        8)*x[2]*x[3]^3*x[4] + 1/3*(28*e + 70)*x[3]^4*x[4] + (-2*e + 
        8)*x[1]^3*x[4]^2 + 1/3*(-10*e - 74)*x[1]^2*x[2]*x[4]^2 + 
        1/3*(-35*e + 101)*x[1]*x[2]^2*x[4]^2 + 1/3*(47*e - 
        5)*x[2]^3*x[4]^2 + 1/3*(44*e - 92)*x[1]^2*x[3]*x[4]^2 + (-29*e
        + 9)*x[1]*x[2]*x[3]*x[4]^2 + 1/3*(-11*e - 4)*x[2]^2*x[3]*x[4]^2 + 
        1/3*(17*e + 127)*x[1]*x[3]^2*x[4]^2 + 1/3*(-26*e - 
        7)*x[2]*x[3]^2*x[4]^2 + 1/3*(-93*e - 95)*x[3]^3*x[4]^2 + 
        1/3*(20*e + 50)*x[1]^2*x[4]^3 + 1/3*(24*e - 
        55)*x[1]*x[2]*x[4]^3 + 1/3*(4*e + 24)*x[2]^2*x[4]^3 + 
        1/3*(-65*e - 89)*x[1]*x[3]*x[4]^3 + 1/3*(52*e + 
        82)*x[2]*x[3]*x[4]^3 + 1/3*(74*e + 54)*x[3]^2*x[4]^3 + 
        1/3*(14*e + 14)*x[1]*x[4]^4 + 1/3*(-28*e - 46)*x[2]*x[4]^4 + 
        1/3*(-26*e - 26)*x[3]*x[4]^4 + 1/3*(4*e + 12)*x[4]^5;
g5:=x[1]^5 + (-e - 3)*x[1]^4*x[2] + (2*e + 5)*x[1]^3*x[2]^2 + 
        (-3*e - 5)*x[1]^2*x[2]^3 + (2*e + 3)*x[1]*x[2]^4 + (-e - 
        1)*x[2]^5 + 1/3*(e - 13)*x[1]^4*x[3] + 1/3*(10*e + 
        26)*x[1]^3*x[2]*x[3] + (-5*e - 13)*x[1]^2*x[2]^2*x[3] + 
        1/3*(16*e + 26)*x[1]*x[2]^3*x[3] + 1/3*(-5*e - 13)*x[2]^4*x[3]
        + 1/3*(-4*e + 28)*x[1]^3*x[3]^2 + 1/3*(5*e - 
        29)*x[1]^2*x[2]*x[3]^2 + 1/3*(e + 50)*x[1]*x[2]^2*x[3]^2 + 
        1/3*(-2*e - 16)*x[2]^3*x[3]^2 + 1/3*(4*e - 23)*x[1]^2*x[3]^3 +
        1/3*(-36*e - 5)*x[1]*x[2]*x[3]^3 + 1/3*(14*e - 
        33)*x[2]^2*x[3]^3 + 1/3*(e + 3)*x[1]*x[3]^4 + 1/3*(51*e + 
        34)*x[2]*x[3]^4 + 1/3*(-6*e + 10)*x[3]^5 + 1/3*(16*e + 
        17)*x[1]^4*x[4] + 1/3*(-35*e - 37)*x[1]^3*x[2]*x[4] + (16*e + 
        17)*x[1]^2*x[2]^2*x[4] + 1/3*(-32*e - 34)*x[1]*x[2]^3*x[4] + 
        1/3*(13*e + 14)*x[2]^4*x[4] + (-20*e - 21)*x[1]^3*x[3]*x[4] + 
        1/3*(73*e + 92)*x[1]^2*x[2]*x[3]*x[4] + 1/3*(-76*e - 
        98)*x[1]*x[2]^2*x[3]*x[4] + 1/3*(19*e + 41)*x[2]^3*x[3]*x[4] + 
        1/3*(83*e + 88)*x[1]^2*x[3]^2*x[4] + 1/3*(-13*e - 
        101)*x[1]*x[2]*x[3]^2*x[4] + (8*e + 27)*x[2]^2*x[3]^2*x[4] + 
        1/3*(-25*e - 21)*x[1]*x[3]^3*x[4] + 1/3*(-97*e + 
        24)*x[2]*x[3]^3*x[4] + 1/3*(-26*e - 57)*x[3]^4*x[4] + 
        1/3*(37*e + 8)*x[1]^3*x[4]^2 + 1/3*(-67*e - 
        23)*x[1]^2*x[2]*x[4]^2 + 1/3*(58*e + 23)*x[1]*x[2]^2*x[4]^2 + 
        (-7*e - 5)*x[2]^3*x[4]^2 + 1/3*(-101*e - 
        19)*x[1]^2*x[3]*x[4]^2 + 1/3*(100*e + 56)*x[1]*x[2]*x[3]*x[4]^2 + 
        (-14*e - 12)*x[2]^2*x[3]*x[4]^2 + 1/3*(68*e + 
        1)*x[1]*x[3]^2*x[4]^2 + 1/3*(-8*e - 70)*x[2]*x[3]^2*x[4]^2 + 
        1/3*(51*e + 53)*x[3]^3*x[4]^2 + 1/3*(18*e - 31)*x[1]^2*x[4]^3 
        + 1/3*(-25*e + 38)*x[1]*x[2]*x[4]^3 + 1/3*(8*e - 
        12)*x[2]^2*x[4]^3 + 1/3*(-27*e + 67)*x[1]*x[3]*x[4]^3 + 
        1/3*(21*e - 23)*x[2]*x[3]*x[4]^3 + 1/3*(-19*e - 
        40)*x[3]^2*x[4]^3 + 1/3*(-16*e - 42)*x[1]*x[4]^4 + 1/3*(16*e +
        31)*x[2]*x[4]^4 + 1/3*(19*e + 45)*x[3]*x[4]^4 + 1/3*(-14*e - 
        14)*x[4]^5;
h1:=(-2*e - 11)*y[1]*y[3]^2 + (-3*e + 5)*y[2]*y[3]^2 + 6*y[3]^3 + 
        (-5*e + 6)*y[1]*y[3]*y[4] + (2*e + 2)*y[2]*y[3]*y[4] + 
        (-4*e - 9)*y[3]^2*y[4] + (3*e + 2)*y[1]*y[4]^2 + 
        2*e*y[2]*y[4]^2 + y[3]*y[4]^2 + (e + 1)*y[4]^3 + (3*e - 
        2)*y[1]*y[3]*y[5] - 5*e*y[2]*y[3]*y[5] + (-7*e - 
        1)*y[3]^2*y[5] + (-7*e - 1)*y[1]*y[4]*y[5] + (3*e + 
        1)*y[2]*y[4]*y[5] + (13*e - 4)*y[3]*y[4]*y[5] + (-5*e + 
        4)*y[4]^2*y[5] + (-e - 3)*y[1]*y[5]^2 + (e + 1)*y[2]*y[5]^2 + 
        (6*e + 8)*y[3]*y[5]^2 + (-5*e - 6)*y[4]*y[5]^2 + 
        e*y[5]^3;
h2:=(5*e + 6)*y[1]*y[3]^2 + (-2*e - 11)*y[2]*y[3]^2 + (3*e - 
        8)*y[1]*y[3]*y[4] + (-5*e + 6)*y[2]*y[3]*y[4] + (3*e + 
        5)*y[3]^2*y[4] + (-5*e - 2)*y[1]*y[4]^2 + (3*e + 
        2)*y[2]*y[4]^2 + (-4*e - 7)*y[3]*y[4]^2 - e*y[4]^3 + (2*e
        + 2)*y[1]*y[3]*y[5] + (3*e - 2)*y[2]*y[3]*y[5] + e*y[3]^2*y[5]
        + 4*e*y[1]*y[4]*y[5] + (-7*e - 1)*y[2]*y[4]*y[5] + (-8*e 
        - 4)*y[3]*y[4]*y[5] + (11*e + 3)*y[4]^2*y[5] + 2*y[1]*y[5]^2 + 
        (-e - 3)*y[2]*y[5]^2 + (e - 5)*y[3]*y[5]^2 + 10*y[4]*y[5]^2 + 
        (-3*e - 2)*y[5]^3;
h3:=(2*e - 3)*y[1]*y[3]^2 + (e + 1)*y[2]*y[3]^2 + 6*y[3]^3 + 
        (-9*e - 2)*y[1]*y[3]*y[4] + (e + 3)*y[2]*y[3]*y[4] + (3*e
        - 10)*y[3]^2*y[4] + (4*e + 4)*y[1]*y[4]^2 + (-3*e - 
        4)*y[2]*y[4]^2 + (-7*e + 2)*y[3]*y[4]^2 + (5*e + 3)*y[4]^3 + 
        (-e - 10)*y[1]*y[3]*y[5] + (-3*e + 7)*y[2]*y[3]*y[5] + (e
        + 6)*y[3]^2*y[5] + (-5*e + 3)*y[1]*y[4]*y[5] + (5*e - 
        1)*y[2]*y[4]*y[5] + (-2*e - 10)*y[3]*y[4]*y[5] + (-4*e + 
        3)*y[4]^2*y[5] - y[1]*y[5]^2 + (-e + 3)*y[2]*y[5]^2 + (-2*e + 
        1)*y[3]*y[5]^2 + (3*e - 5)*y[4]*y[5]^2 + (3*e + 4)*y[5]^3;
h4:=(e - 5)*y[1]*y[3]^2 + (3*e + 8)*y[2]*y[3]^2 + 6*y[3]^3 + 
        e*y[1]*y[3]*y[4] + (-4*e - 10)*y[2]*y[3]*y[4] + (-4*e - 
        9)*y[3]^2*y[4] + (-3*e - 1)*y[1]*y[4]^2 + (-e + 3)*y[2]*y[4]^2
        + y[3]*y[4]^2 + (e + 1)*y[4]^3 + (9*e + 10)*y[1]*y[3]*y[5] + 
        (-2*e - 3)*y[2]*y[3]*y[5] + (-4*e - 4)*y[3]^2*y[5] + (-e 
        - 7)*y[1]*y[4]*y[5] + (-3*e - 2)*y[2]*y[4]*y[5] + (10*e - 
        1)*y[3]*y[4]*y[5] + (-2*e + 1)*y[4]^2*y[5] + (2*e + 
        3)*y[1]*y[5]^2 + (-2*e - 5)*y[2]*y[5]^2 + (3*e + 
        2)*y[3]*y[5]^2 + (e + 6)*y[4]*y[5]^2 + (-5*e - 3)*y[5]^3;
h5:=(2*e + 3)*y[1]*y[3]^2 + (-5*e - 5)*y[2]*y[3]^2 - 6*y[3]^3 + 
        (3*e - 2)*y[1]*y[3]*y[4] - 2*e*y[2]*y[3]*y[4] + 5*y[3]^2*y[4] 
        + (-2*e - 2)*y[1]*y[4]^2 - y[2]*y[4]^2 + (2*e - 1)*y[3]*y[4]^2
        - e*y[4]^3 + (2*e - 1)*y[1]*y[3]*y[5] - 2*y[2]*y[3]*y[5] + 
        (e + 3)*y[3]^2*y[5] + e*y[1]*y[4]*y[5] + (-e - 
        1)*y[2]*y[4]*y[5] + (-2*e - 1)*y[3]*y[4]*y[5] + 
        2*e*y[4]^2*y[5] + (3*e + 2)*y[1]*y[5]^2 - e*y[2]*y[5]^2 +
        (-5*e - 2)*y[3]*y[5]^2 + (3*e + 1)*y[4]*y[5]^2 + y[5]^3;



    k1:=1/7*(e - 2)*x[1]^2 + 1/7*(5*e + 11)*x[1]*x[2] + 1/7*(e - 
        2)*x[2]^2 + 1/21*(-29*e + 2)*x[1]*x[3] + 1/21*(10*e + 
        8)*x[2]*x[3] + 1/3*(-2*e - 7)*x[1]*x[4] + 1/21*(-2*e + 
        11)*x[2]*x[4] + 1/21*(e + 5)*x[3]*x[4] + 1/21*(-5*e - 
        4)*x[4]^2;
    k2:=1/7*(-3*e - 8)*x[1]^2 + 1/7*(3*e + 8)*x[1]*x[2] + 1/7*(3*e + 
        1)*x[2]^2 + 1/21*(-4*e + 22)*x[1]*x[3] + 1/21*(5*e + 
        4)*x[2]*x[3] + 1/21*(-37*e - 17)*x[1]*x[4] + 1/21*(17*e + 
        1)*x[2]*x[4] + 1/21*(11*e + 13)*x[3]*x[4] + 1/21*(-13*e - 
        2)*x[4]^2;
    k3:=1/7*(3*e + 1)*x[1]^2 + 1/7*(-3*e - 1)*x[1]*x[2] + 1/7*(3*e + 
        1)*x[2]^2 + 1/21*(-10*e - 8)*x[1]*x[3] + 1/21*(20*e + 
        37)*x[2]*x[3] - e*x[3]^2 + 1/21*(2*e - 11)*x[1]*x[4] + 
        1/21*(-13*e - 2)*x[2]*x[4] + 1/3*(-e - 5)*x[3]*x[4] + 
        1/21*(-e - 5)*x[4]^2;
    k4:=1/7*(3*e + 1)*x[1]^2 + 1/7*(-3*e - 1)*x[1]*x[2] + 1/7*(3*e + 
        1)*x[2]^2 + 1/21*(-10*e - 8)*x[1]*x[3] + 1/21*(2*e + 
        10)*x[2]*x[3] + 1/21*(2*e - 11)*x[1]*x[4] + 1/21*(5*e + 
        25)*x[2]*x[4] + 1/21*(-25*e + 1)*x[3]*x[4] + 1/21*(-4*e - 
        41)*x[4]^2;
    k5:=x[1]^2 - x[1]*x[2] + x[2]^2 + 1/3*(2*e - 2)*x[1]*x[3] + 1/3*(-4*e 
        - 2)*x[2]*x[3] + 1/3*(5*e + 4)*x[1]*x[4] + 1/3*(-e - 
        5)*x[2]*x[4] + 1/3*(-e - 2)*x[3]*x[4] + 1/3*(2*e + 1)*x[4]^2;

t1:=y[1]*y[3] + 1/19*(18*e + 7)*y[1]*y[4] + 1/19*(-6*e + 4)*y[1]*y[5] 
        + 1/19*(-5*e - 3)*y[2]*y[3] + 1/19*(-5*e - 3)*y[2]*y[4] + 
        1/19*(4*e - 9)*y[2]*y[5] + 1/19*(2*e - 14)*y[3]^2 + 
        1/19*(2*e + 5)*y[3]*y[4] + 1/19*(11*e + 18)*y[3]*y[5] + 
        1/19*(3*e - 2)*y[4]^2 + 1/19*(-9*e + 6)*y[4]*y[5] + 
        1/19*(-9*e - 13)*y[5]^2;
t2:=1/19*(3*e + 17)*y[1]*y[3] + 1/19*(6*e - 4)*y[1]*y[4] + 
        1/19*(-3*e + 2)*y[1]*y[5] + 1/19*(-e - 12)*y[2]*y[3] + 
        1/19*(-10*e - 6)*y[2]*y[4] + 1/19*(-e - 12)*y[2]*y[5] + 
        1/19*(4*e - 28)*y[3]^2 + 1/19*(-5*e + 16)*y[3]*y[4] + 
        e*y[3]*y[5] + 1/19*(12*e + 11)*y[4]^2 + 1/19*(-18*e + 
        12)*y[4]*y[5] + 1/19*(-12*e - 11)*y[5]^2;
t3:=1/19*(12*e + 11)*y[1]*y[3] + 1/19*(-2*e - 5)*y[1]*y[4] + 
        1/19*(5*e + 3)*y[1]*y[5] + 1/19*(-e - 12)*y[2]*y[3] + 
        1/19*(-3*e + 2)*y[2]*y[4] + 1/19*(-2*e - 5)*y[2]*y[5] + 
        1/19*(8*e + 1)*y[3]^2 + 1/19*(-2*e - 5)*y[3]*y[4] + 
        1/19*(2*e + 5)*y[3]*y[5] + 1/19*(-3*e + 2)*y[4]^2 + 
        1/19*(-5*e - 3)*y[5]^2;
t4:=1/19*(20*e + 12)*y[1]*y[3] + 1/19*(-9*e - 13)*y[1]*y[4] + 
        1/19*(4*e + 10)*y[1]*y[5] + 1/19*(-2*e - 5)*y[2]*y[3] + 
        1/19*(5*e + 3)*y[2]*y[4] + 1/19*(-9*e - 13)*y[2]*y[5] + 
        1/19*(8*e + 1)*y[3]^2 + 1/19*(-9*e - 13)*y[3]*y[4] + 
        1/19*(12*e - 8)*y[3]*y[5] + 1/19*(-4*e + 9)*y[4]^2 + 
        1/19*(6*e + 15)*y[4]*y[5] + 1/19*(-13*e - 4)*y[5]^2;
t5:=(e + 1)*y[1]*y[3] + 1/19*(-e - 12)*y[1]*y[4] + 1/19*(-3*e + 
        2)*y[1]*y[5] + 1/19*(-9*e - 13)*y[2]*y[3] + 1/19*(4*e + 
        10)*y[2]*y[4] + 1/19*(-e - 12)*y[2]*y[5] + 1/19*(-10*e + 
        13)*y[3]^2 + 1/19*(23*e - 9)*y[3]*y[4] + 1/19*(10*e + 
        6)*y[3]*y[5] + 1/19*(-17*e - 14)*y[4]^2 + 1/19*(6*e + 
        15)*y[4]*y[5] + 1/19*(-12*e - 11)*y[5]^2;

M5:=GL(5,K);
Bm2:=ScalarMatrix(K,5,1/3)*Matrix(K,5,5,[-2*e-1,-2*e+2,0,0,0,   
                                        -e+1,-e-2,0,0,0,
                                        0,0,e+2,e+2,e-1,
                                        0,0,e+2,e-1,e+2,
                                        0,0,e-1,e+2,e+2]);
Bm3:=ScalarMatrix(K,5,1/3)*Matrix(K,5,5,[-2*e-1,0,0,-2*e+2,0,   
                                        0,-2*e-1,-2*e-1,0,e+2,
                                        0,e-1,-2*e-1,0,e-1,
                                        2*e+1,0,0,-e+1,0,
                                        0,e+2,-2*e-1,0,-2*e-1]);
PSp43:=sub<M5|Bm2,Bm3>;

X4:=Scheme(P4,[y[1]^4-y[1]*(y[2]^3+y[3]^3+y[4]^3+y[5]^3)+3*y[2]*y[3]*y[4]*y[5]]);
pt:=[1/7*(e - 2), 1/7*(-3*e - 8), 1/7*(3*e + 1), 1/7*(3*e + 1) , 1];
QC:=Scheme(P4,[y[1]^2 - y[1]*y[2] + y[2]^2 + 1/3*(2*e - 2)*y[1]*y[3] + 1/3*(-4*e - 2)*y[2]*y[3] + 1/3*(5*e +\
 4)*y[1]*y[4] + 1/3*(-e - 5)*y[2]*y[4] +  1/3*(-e - 2)*y[3]*y[4] + 1/3*(2*e + 1)*y[4]^2 + 1/3*(-e + 1)*y[1]*y\
[5] + 1/3*(2*e + 1)*y[2]*y[5] + 1/3*(e - 1)*y[3]*y[5] + y[4]*y[5] + 1/3*(-2*e - 1)*y[5]^2]);

l:=AssociativeArray();
    l[1]:=Scheme(P4,[y[4] - y[5],y[3] - y[5],y[1] + e*y[2]]);
    
    l[4]:=Scheme(P4,[y[4] + (-e - 1)*y[5],y[3],y[1] + (-e - 1)*y[2] + e*y[5]]);

    l[3]:=Scheme(P4,[y[4] - e*y[5],y[3] + 1/2*(-e - 1)*y[5],y[1] + (-e - 1)*y[2] + (-e - 2)*y[5]]);
    
    l[2]:=Scheme(P4,[y[3] - 1/2*y[4] - 1/2*y[5],y[2] - 1/2*y[4] + 1/2*y[5],y[1] + 1/2*(e + 1)*y[4] + 1/2*(-e - 1)*y[5]]);
    
    l[6]:=Scheme(P4,[y[4] - e*y[5], y[3] - e*y[5],y[1] + e*y[2]]);
    
    l[5]:=Scheme(P4,[y[3] + e*y[4] + y[5],y[2] - y[4] + (e + 1)*y[5],y[1] + 2*e*y[4] + (e + 2)*y[5]]);

    R:=Scheme(P4,[y[3] + 1/2*(e + 1)*y[4] - 1/2*e*y[5],y[2]*y[4] + 1/2*(-e - 1)*y[4]^2 + (e + 1)*y[2]*y[5] + (-e - 2)*y[4]*y[5] + 1/2*(4*e + 1)*y[5]^2,y[1] + e*y[2] + 1/2*(e + 1)*y[4] + 1/2*e*y[5]]);

    Rp:=Scheme(P4,[y[1]^2 - y[1]*y[2] + y[2]^2 + 1/3*(2*e - 2)*y[1]*y[3] + 1/3*(-4*e - 2)*y[2]*y[3] + 1/3*(5*e + 4)*y[1]*y[4] + 1/3*(-e - 5)*y[2]*y[4] + 1/3*(-e - 2)*y[3]*y[4] + 1/3*(2*e + 1)*y[4]^2 + 1/3*(-e + 1)*y[1]*y[5] + 1/3*(2*e + 1)*y[2]*y[5] + 1/3*(e - 1)*y[3]*y[5] + y[4]*y[5] + 1/3*(-2*e - 1)*y[5]^2,y[1] + (-e - 1)*y[2] + e*y[4] - e*y[5],y[3] - y[4]]);
P:=AssociativeArray();
P[1]:=Points(l[1] meet l[2])[1];
P[2]:=Points(l[2] meet l[3])[1];
P[3]:=Points(l[3] meet l[4])[1];
P[4]:=Points(l[4] meet l[5])[1];
P[5]:=Points(l[5] meet l[6])[1];
P[6]:=Points(l[6] meet l[1])[1];
fixedpoint:=Points(R meet Rp);
configuration:=&join[l[i]: i in [1..6]] join R join Rp;

C6X4Matrix:=Matrix(K,5,5,[1/3,-2/3*e,1/3*(2*e + 2),-2/3,-2/3,-1/3,-1/3*e,1/3*(e + 1),-1/3,2/3,1/3*(e + 1),2/3,-1/3*e,1/3*(e + 1),1/3*(e + 1),1/3*(e + 1),-1/3,2/3*e,1/3*(e + 1),1/3*(e + 1),1/3*(e + 1),-1/3,-1/3*e,1/3*(-2*e - 2),1/3*(e + 1)]);
C6QCMatrix:=Matrix(K,5,5,[-e - 1,0,1/3*(e - 1),1/3*(e + 2),1/3*(-2*e - 1),1,0,1/3*(e + 2),1/3*(4*e + 2),1/3*(4*e + 5),1/3,1/3*(e + 1),1/3*(-2*e + 2),1/3*(-2*e - 1),1/3*(e + 2),1/3*(2*e + 2),1/3*(-e - 3),1/3*(2*e - 2),1/3*(2*e - 2),1/3*(-e + 1),1/3*(e + 3),1/3*(3*e - 1),e + 1,2*e + 1,1]);
C6P3Matrix:=Matrix(K,4,4,[1/21*(-e - 26),1/21*(-11*e - 13),1/7*(6*e + 2),1/7*(-e + 2),1/3*(-4*e + 1),1/3*(e + 5),-e,1,1/21*(-11*e + 1),1/21*(-2*e + 18),1/7*(-11*e - 6),1/7*(-4*e - 6),1/21*(-5*e + 10),1/21*(e - 9),1/7*(9*e + 3),1/7*(9*e + 3)]);

D6invX4Matrix:=Matrix(K,5,5,[1,0,0,0,0,0,0,0,0,1,0,0,0,-e - 1,0,0,0,e,0,0,0 ,1,0,0,0]);

X4toQC:=map<P4->P4|[f1,f2,f3,f4,f5]>;
QCtoX4:=map<P4->P4|[h1,h2,h3,h4,h5]>;
X4toP3:=map<P4->P3|[f1-pt[1]*f5,f2-pt[2]*f5,f3-pt[3]*f5,f4-pt[4]*f5]>;
P3toX4:=map<P3->P4|[g1,g2,g3,g4,g5]>;
QCtoP3:=map<P4->P3|[y[1]-pt[1]*y[5],y[2]-pt[2]*y[5],y[3]-pt[3]*y[5],y[4]-pt[4]*y[5]]>;
P3toQC:=map<P3->P4|[k1,k2,k3,k4,k5]>;
C6X4:=map<P4->P4|[&+[Eltseq(Rows(Transpose(C6X4Matrix))[i])[j]*y[j]: j in [1..5]]: i in [1..5]]>;
C6QC:=map<P4->P4|[&+[Eltseq(Rows(Transpose(C6QCMatrix))[i])[j]*y[j]: j in [1..5]]: i in [1..5]]>;
C6P3:=map<P3->P3|[&+[Eltseq(Rows(Transpose(C6P3Matrix))[i])[j]*x[j]: j in [1..4]]: i in [1..4]]>;
involutionQC:=map<P4->P4|[t1,t2,t3,t4,t5]>;

D6invX4:=map<P4->P4|[&+[Eltseq(Rows(Transpose(D6invX4Matrix))[i])[j]*y[j]: j in [1..5]]: i in [1..5]]>;


//Here's an empirical check that the map P3toX4 is C6-equivariant
for i in [1..100] do  
a1:=Random([-100..100]);
a2:=Random([-100..100]);
a3:=Random([-100..100]);
a4:=Random([-100..100]);
P3toX4(C6P3(P3![a1,a2,a3,a4])) eq C6X4(P3toX4(P3![a1,a2,a3,a4]));
end for;
f:=DefiningPolynomials(QC)[1];


//Now we construt th D6-link to divisor of degree (1,1) in P2xP2 and to quadrics. 

vt:=SingularPoints(QC)[1];
int:=Points(R meet Rp)[1];

li:=Span({vt,int});

pinvolutionQC:=hom<PP4->PP4|[t1,t2,t3,t4,t5]>;

li1:=DefiningPolynomials(li)[1];
li2:=DefiningPolynomials(li)[2];
li3:=DefiningPolynomials(li)[3];

liinv:=Scheme(QC,[pinvolutionQC(li1),pinvolutionQC(li2),pinvolutionQC(li3)]);

P2<[t]>:=ProjectiveSpace(K,2);
P2xP2<x0,x1,x2,z0,z1,z2>:=DirectProduct([P2,P2]);
p2p2:=[li1,li2,li3,pinvolutionQC(li1),pinvolutionQC(li2),pinvolutionQC(li3)];
maptoP2xP2:=map<P4->P2xP2|p2p2>;



P2<[t]>:=ProjectiveSpace(K,2);
PP2:=CoordinateRing(P2);
pp2:=hom<PP2->PP4|[li1,li2,li3]>;

P2<[k]>:=ProjectiveSpace(K,2);
C6onfirstP2:=Matrix(K,3,3,[-e-1,0,0,e+2,3*e+1,3,(-e+2)/3,1/3*(2*e+6),-2*e-1]);
C6onsecondP2:=Matrix(K,3,3,[1,0,0,-2,-2*e - 1,-3,5/3*e,1/3*(-2*e - 6),3*e + 1]);

C6p21:=map<P2->P2|[&+[Eltseq(Rows(Transpose(C6onfirstP2))[i])[j]*k[j]: j in [1..3]]: i in [1..3]]>;

C6p22:=map<P2->P2|[&+[Eltseq(Rows(Transpose(C6onsecondP2))[i])[j]*k[j]: j in [1..3]]: i in [1..3]]>;

11DivisorInP2xP2:=maptoP2xP2(QC);//11DivisorInP2xP2: the (1,1) divisor in P2xP2

//The complement of 3*x1-(3*e+2)*x2=3*z1-(3*e+2)*z2=0 in im<P2xP2, is an invariant open set under the D6 action, which gives a quadric.
patch1:=3*x1-(3*e+2)*x2;
patch2:=3*z1-(3*e+2)*z2;
mapfromP2xP2toP4:=map<P2xP2->P4|[x0*patch2,x1*patch2,z0*patch1,z1*patch1,patch1*patch2]>;



Q:=Scheme(P4,[y[1]*y[3] + 1/14*(10*e + 1)*y[2]*y[3] + 1/14*(10*e + 1)*y[1]*y[4] + 1/98*(-43*e - 33)*y[2]*y[4] + 1/21*(-5*e - 4)*y[1]*y[5] + 1/294*(29*e + 61)*y[2]*y[5] + 1/21*(-5*e - 4)*y[3]*y[5] + 1/294*(29*e + 61)*y[4]*y[5] + 1/294*(-5*e - 46)*y[5]^2]);


K:=CyclotomicField(6);
e:=RootOfUnity(3);
e6:=RootOfUnity(6);
P4<[y]>:=ProjectiveSpace(K,4);
PP4:=CoordinateRing(P4);
M:=GL(5,K);

//oldC6onQ:=Matrix(K,5,5,[1,0,0,0,0,1/7*(10*e + 1),-1,0,0,0,0,0,-e - 1,0,0,0,0,1/7*(-e + 9),e + 1,0,1/21*(-3*e -8),1/3*(-2*e - 2),1/21*(15*e + 5),-2/3,-e]);
//oldC6onQ is the C6-action on Q induced from C6-action on P2xP2
//oldC2onQ:=Matrix(K,5,5,[0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1]);
//oldC2onQ is the C2-action on Q induced from C2-action on P2xP2
//<oldC6onQ,oldC2onQ> generate a subgroup S3*C6 acting on P4, with C3 scalar subgroup as a direct sum. Removing the scalar subgroup we get real D6 action on P4
C6onQ:=Matrix(K,5,5,[-e - 1, 0, 0, 0, 0,1/7*(-e + 9), e + 1, 0, 0, 0,0, 0, e, 0, 0,0, 0, 1/7*(-9*e - 10), -e, 0,1/21*(8*e + 5), 2/3*e, 1/21*(-5*e + 10), 1/3*(2*e + 2), -1]);
C2onQ:=Matrix(K,5,5,[0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1]);
//<C6onQ,C2onQ>generate the real D6 action on Q
D6onQ:=sub<M|C6onQ,C2onQ>;



Q:=Scheme(P4,[y[1]*y[3] + 1/14*(10*e + 1)*y[2]*y[3] + 1/14*(10*e + 1)*y[1]*y[4] + 1/98*(-43*e - 33)*y[2]*y[4] + 1/21*(-5*e - 4)*y[1]*y[5] + 1/294*(29*e + 61)*y[2]*y[5] + 1/21*(-5*e - 4)*y[3]*y[5] + 1/294*(29*e + 61)*y[4]*y[5] + 1/294*(-5*e - 46)*y[5]^2]);

//oldC6onQ:=Matrix(K,5,5,[1,0,0,0,0,1/7*(10*e + 1),-1,0,0,0,0,0,-e - 1,0,0,0,0,1/7*(-e + 9),e + 1,0,1/21*(-3*e -8),1/3*(-2*e - 2),1/21*(15*e + 5),-2/3,-e]);

//oldC2onQ:=Matrix(K,5,5,[0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1]);


//NB:Change of basis matrix
NB:=Matrix(K,5,5,[
 0, 0, 1, 1/13*(20*e6 - 2), 0,
 0, 0, 1, 0, 0,
 1, 0, 0, 0, 0,
 1, 1/13*(20*e6 - 2), 0, 0, 0,
 1,  2*e6 - 2,  1,  2*e6 - 2, -3*e6 - 3]);

//newC6, newC2: the C6 and C2 action in new basis
newC6:=NB*(C6onQ)*NB^(-1);
newC2:=NB*(C2onQ)*NB^(-1);

//D6NewBasis: new D6 action in new basis as matrix group
D6NewBasis:=sub<M|newC2,newC6>;
padp:=hom<PP4->PP4|[&+[Eltseq(Rows(Transpose(NB))[i])[j]*y[j]: j in [1..5]]: i in [1..5]]>;

//QNewBasis: equation of the quadric in new basis
newquadricequation:=padp(DefiningPolynomials(Q)[1]);
QNewBasis:=Scheme(P4, [padp(DefiningPolynomials(Q)[1])]);     



//check maptoP2xP2 from P4 to P2xP2 is birational
//for i in [1..100] do 
//  a1:=Random([-1000..1000]);
//a2:=Random([-1000..1000]);
//a4:=Random([-1000..1000]);
//a5:=Random([-1000..1000]);
//PPP<t>:=PolynomialRing(K);
//pa:=hom<PP4->PPP|[a1,a2,t,a4,a5]>;
//a3:=Roots(pa(DefiningPolynomials(QC)[1]))[1][1];
//tapt:=maptoP2xP2(QC![a1,a2,a3,a4,a5]);
//pre:=Scheme(QC,[p2p2[2]*tapt[1]-p2p2[1]*tapt[2],p2p2[3]*tapt[1]-p2p2[1]*tapt[3],p2p2[5]*tapt[4]-p2p2[4]*tapt[5],p2p2[6]*tapt[4]-p2p2[4]*tapt[6]]);
//co:=Complement(pre,li);
//[Dimension(co),Degree(co)];
//end for;


//check C6 action on P2 is compatible with previous one
//cm:=map<P4->P2|[p2p2[i]:i in [4,5,6]]>;
//for i in [1..100] do 
//a1:=Random([-10000..10000]);
//a2:=Random([-10000..10000]);
//a4:=Random([-10000..10000]);
//a5:=Random([-10000..10000]);
//PPP<t>:=PolynomialRing(K);
//pa:=hom<PP4->PPP|[a1,a2,t,a4,a5]>;
//a3:=Roots(pa(DefiningPolynomials(QC)[1]))[1][1];
//C6p22(cm(QC![a1,a2,a3,a4,a5])) eq cm(C6QC(QC![a1,a2,a3,a4,a5]));
//end for;

//how we find action on P2
//for i in [1..100] do
//Co<a1,a2,a3,b1,b2,b3,c1,c2,c3>:=PolynomialRing(K,9);
//themat:=Matrix(Co,3,3,[a1,a2,a3,b1,b2,b3,c1,c2,c3]);
//a1:=Random([-10000..10000]);
//a2:=Random([-10000..10000]);
//a4:=Random([-10000..10000]);
//a5:=Random([-10000..10000]);
//PPP<t>:=PolynomialRing(K);
//pa:=hom<PP4->PPP|[a1,a2,t,a4,a5]>;
//a3:=Roots(pa(DefiningPolynomials(QC)[1]))[1][1];
//opt:=Eltseq(cm(QC![a1,a2,a3,a4,a5]));
//tarpt:=Eltseq(ChangeRing(Vector(Eltseq(cm(C6QC(QC![a1,a2,a3,a4,a5])))),Co));
//dspt:=Eltseq(ChangeRing(Vector(opt),Co)*themat);
//rel:=[dspt[2]*tarpt[1]-dspt[1]*tarpt[2],dspt[3]*tarpt[1]-dspt[1]*tarpt[3]];
//ma:=ma cat [K!x: x in readrelations(rel[1],Co)];
//ma:=ma cat [K!x: x in readrelations(rel[2],Co)];
//mat:=Transpose(Matrix(K,#ma div 9,9,ma));
//Rank(Kernel(mat));
//end for;




