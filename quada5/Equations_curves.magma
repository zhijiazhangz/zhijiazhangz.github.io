//C41,C42,C81,C82,C161,C162 are the corresponding curves of degree 4,8 and 16
//inv1 and inv2 are two involutions
K:=CyclotomicField(30);

//e30:=259;

G:=MatrixGroup<5, K | [
    Matrix(SparseMatrix(K, 5, 5, [
    <1, 2, 1>, <1, 5, -1>, <2, 4, 1>, <2, 5, -1>, <3, 5, -1>, <4, 1, 1>, <4, 5, 
    -1>, <5, 3, 1>, <5, 5, -1>])),
    Matrix(SparseMatrix(K, 5, 5, [
    <1, 2, -1>, <1, 3, 1>, <2, 2, -1>, <2, 5, 1>, <3, 2, -1>, <3, 4, 1>, <4, 1, 
    1>, <4, 2, -1>, <5, 2, -1>]))
]> where w := K.1 where K := CyclotomicField(30);

P4<x1,x2,x3,x4,x5>:=ProjectiveSpace(K,4);
e30:=RootOfUnity(30);
c3:=[x1^2*x2 + x1*x2^2 + 2*x1*x2*x3 + x2^2*x3 + x2*x3^2 + 2*x2*x3*x4 + 
            x3^2*x4 + x3*x4^2 + x1^2*x5 + 2*x1*x2*x5 + 2*x1*x4*x5 + 2*x3*x4*x5 +
            x4^2*x5 + x1*x5^2 + x4*x5^2,
        x1^2*x3 + x1*x3^2 + x1^2*x4 + 2*x1*x2*x4 + x2^2*x4 + 2*x1*x3*x4 + 
            x1*x4^2 + x2*x4^2 + x2^2*x5 + 2*x1*x3*x5 + 2*x2*x3*x5 + x3^2*x5 + 
            2*x2*x4*x5 + x2*x5^2 + x3*x5^2];
e5:=RootOfUnity(5);
X:=Scheme(P4, x1^2 + x1*x2 + x2^2 + x1*x3 + x2*x3 + x3^2 + x1*x4 + x2*x4 + x3*x4 + x4^2 + 
        x1*x5 + x2*x5 + x3*x5 + x4*x5 + x5^2);
a3:=-e30^7 + e30^3 + e30^2 + 1;
a4:=e30^7 - e30^3 - e30^2 + 2;

f1:=a3*c3[1]+c3[2];
f2:=a4*c3[1]+c3[2];
X:=Q;
X1:=Scheme(P4,f1);
X2:=Scheme(P4,f2);
C41:=SingularSubscheme(X1);
df1:=DefiningEquations(C41);
C42:=SingularSubscheme(X2);

M:=GL(5,K);


inv1:=map<P4->P4|
[
    1/3*(e30^7 - e30^3 - e30^2 - 2)*x1^2 + 1/3*(-2*e30^7 + 
        2*e30^3 + 2*e30^2 + 1)*x1*x2 + 1/3*(-2*e30^7 + 2*e30^3 +
        2*e30^2 + 1)*x2^2 + 1/3*(e30^7 - e30^3 - e30^2 + 
        1)*x1*x3 + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x2*x3 + 
        1/3*(e30^7 - e30^3 - e30^2 + 1)*x3^2 + 1/3*(e30^7 - 
        e30^3 - e30^2 + 1)*x1*x4 + 1/3*(e30^7 - e30^3 - 
        e30^2 + 1)*x2*x4 + 1/3*(4*e30^7 - 4*e30^3 - 4*e30^2 + 
        1)*x3*x4 + 1/3*(e30^7 - e30^3 - e30^2 + 1)*x4^2 + 
        1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x1*x5 + 
        1/3*(-5*e30^7 + 5*e30^3 + 5*e30^2 + 1)*x2*x5 + 
        1/3*(e30^7 - e30^3 - e30^2 + 1)*x3*x5 + 1/3*(-2*e30^7 + 
        2*e30^3 + 2*e30^2 + 1)*x4*x5 + 1/3*(-2*e30^7 + 2*e30^3 +
        2*e30^2 + 1)*x5^2,
    1/3*(e30^7 - e30^3 - e30^2 - 2)*x1^2 + 1/3*(4*e30^7 - 
        4*e30^3 - 4*e30^2 - 5)*x1*x2 + 1/3*(e30^7 - e30^3 - 
        e30^2 - 2)*x2^2 + 1/3*(e30^7 - e30^3 - e30^2 - 5)*x1*x3 
        + 1/3*(4*e30^7 - 4*e30^3 - 4*e30^2 - 5)*x2*x3 + 
        1/3*(e30^7 - e30^3 - e30^2 - 2)*x3^2 + 1/3*(e30^7 - 
        e30^3 - e30^2 - 5)*x1*x4 + 1/3*(e30^7 - e30^3 - 
        e30^2 - 5)*x2*x4 + 1/3*(4*e30^7 - 4*e30^3 - 4*e30^2 - 
        5)*x3*x4 + 1/3*(e30^7 - e30^3 - e30^2 - 2)*x4^2 + 
        1/3*(4*e30^7 - 4*e30^3 - 4*e30^2 - 5)*x1*x5 + 1/3*(e30^7
        - e30^3 - e30^2 - 5)*x2*x5 + 1/3*(e30^7 - e30^3 - 
        e30^2 - 5)*x3*x5 + 1/3*(4*e30^7 - 4*e30^3 - 4*e30^2 - 
        5)*x4*x5 + 1/3*(e30^7 - e30^3 - e30^2 - 2)*x5^2,
    1/3*(e30^7 - e30^3 - e30^2 + 1)*x1^2 + 1/3*(-2*e30^7 + 
        2*e30^3 + 2*e30^2 + 1)*x1*x2 + 1/3*(-2*e30^7 + 2*e30^3 +
        2*e30^2 + 1)*x2^2 + 1/3*(e30^7 - e30^3 - e30^2 + 
        1)*x1*x3 + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x2*x3 + 
        1/3*(e30^7 - e30^3 - e30^2 - 2)*x3^2 + 1/3*(e30^7 - 
        e30^3 - e30^2 + 1)*x1*x4 + 1/3*(-5*e30^7 + 5*e30^3 + 
        5*e30^2 + 1)*x2*x4 + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 +
        1)*x3*x4 + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x4^2 + 
        1/3*(4*e30^7 - 4*e30^3 - 4*e30^2 + 1)*x1*x5 + 1/3*(e30^7
        - e30^3 - e30^2 + 1)*x2*x5 + 1/3*(e30^7 - e30^3 - 
        e30^2 + 1)*x3*x5 + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 
        1)*x4*x5 + 1/3*(e30^7 - e30^3 - e30^2 + 1)*x5^2,
    1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x1^2 + 1/3*(-2*e30^7 
        + 2*e30^3 + 2*e30^2 + 1)*x1*x2 + 1/3*(e30^7 - e30^3 - 
        e30^2 + 1)*x2^2 + 1/3*(e30^7 - e30^3 - e30^2 + 1)*x1*x3 
        + 1/3*(4*e30^7 - 4*e30^3 - 4*e30^2 + 1)*x2*x3 + 
        1/3*(e30^7 - e30^3 - e30^2 + 1)*x3^2 + 1/3*(-5*e30^7 + 
        5*e30^3 + 5*e30^2 + 1)*x1*x4 + 1/3*(e30^7 - e30^3 - 
        e30^2 + 1)*x2*x4 + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 
        1)*x3*x4 + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x4^2 + 
        1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x1*x5 + 
        1/3*(e30^7 - e30^3 - e30^2 + 1)*x2*x5 + 1/3*(e30^7 - 
        e30^3 - e30^2 + 1)*x3*x5 + 1/3*(-2*e30^7 + 2*e30^3 + 
        2*e30^2 + 1)*x4*x5 + 1/3*(e30^7 - e30^3 - e30^2 - 
        2)*x5^2,
    1/3*(e30^7 - e30^3 - e30^2 + 1)*x1^2 + 1/3*(4*e30^7 - 
        4*e30^3 - 4*e30^2 + 1)*x1*x2 + 1/3*(e30^7 - e30^3 - 
        e30^2 + 1)*x2^2 + 1/3*(e30^7 - e30^3 - e30^2 + 1)*x1*x3 
        + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x2*x3 + 
        1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x3^2 + 1/3*(e30^7
        - e30^3 - e30^2 + 1)*x1*x4 + 1/3*(e30^7 - e30^3 - 
        e30^2 + 1)*x2*x4 + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 
        1)*x3*x4 + 1/3*(e30^7 - e30^3 - e30^2 - 2)*x4^2 + 
        1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x1*x5 + 
        1/3*(e30^7 - e30^3 - e30^2 + 1)*x2*x5 + 1/3*(-5*e30^7 + 
        5*e30^3 + 5*e30^2 + 1)*x3*x5 + 1/3*(-2*e30^7 + 2*e30^3 +
        2*e30^2 + 1)*x4*x5 + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 +
        1)*x5^2
]>;



inv2:=map<P4->P4|[
    1/3*(e30^7 - e30^3 - e30^2 - 2)*x1^2 + 1/3*(e30^7 - 
        e30^3 - e30^2 + 1)*x1*x2 + 1/3*(e30^7 - e30^3 - 
        e30^2 + 1)*x2^2 + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 
        1)*x1*x3 + 1/3*(e30^7 - e30^3 - e30^2 + 1)*x2*x3 + 
        1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x3^2 + 
        1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x1*x4 + 
        1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x2*x4 + 
        1/3*(-5*e30^7 + 5*e30^3 + 5*e30^2 + 1)*x3*x4 + 
        1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x4^2 + 1/3*(e30^7
        - e30^3 - e30^2 + 1)*x1*x5 + 1/3*(4*e30^7 - 4*e30^3 - 
        4*e30^2 + 1)*x2*x5 + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 +
        1)*x3*x5 + 1/3*(e30^7 - e30^3 - e30^2 + 1)*x4*x5 + 
        1/3*(e30^7 - e30^3 - e30^2 + 1)*x5^2,
    1/3*(e30^7 - e30^3 - e30^2 - 2)*x1^2 + 1/3*(e30^7 - 
        e30^3 - e30^2 - 5)*x1*x2 + 1/3*(e30^7 - e30^3 - 
        e30^2 - 2)*x2^2 + 1/3*(4*e30^7 - 4*e30^3 - 4*e30^2 - 
        5)*x1*x3 + 1/3*(e30^7 - e30^3 - e30^2 - 5)*x2*x3 + 
        1/3*(e30^7 - e30^3 - e30^2 - 2)*x3^2 + 1/3*(4*e30^7 - 
        4*e30^3 - 4*e30^2 - 5)*x1*x4 + 1/3*(4*e30^7 - 4*e30^3 - 
        4*e30^2 - 5)*x2*x4 + 1/3*(e30^7 - e30^3 - e30^2 - 
        5)*x3*x4 + 1/3*(e30^7 - e30^3 - e30^2 - 2)*x4^2 + 
        1/3*(e30^7 - e30^3 - e30^2 - 5)*x1*x5 + 1/3*(4*e30^7 - 
        4*e30^3 - 4*e30^2 - 5)*x2*x5 + 1/3*(4*e30^7 - 4*e30^3 - 
        4*e30^2 - 5)*x3*x5 + 1/3*(e30^7 - e30^3 - e30^2 - 
        5)*x4*x5 + 1/3*(e30^7 - e30^3 - e30^2 - 2)*x5^2,
    1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x1^2 + 1/3*(e30^7 - 
        e30^3 - e30^2 + 1)*x1*x2 + 1/3*(e30^7 - e30^3 - 
        e30^2 + 1)*x2^2 + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 
        1)*x1*x3 + 1/3*(e30^7 - e30^3 - e30^2 + 1)*x2*x3 + 
        1/3*(e30^7 - e30^3 - e30^2 - 2)*x3^2 + 1/3*(-2*e30^7 + 
        2*e30^3 + 2*e30^2 + 1)*x1*x4 + 1/3*(4*e30^7 - 4*e30^3 - 
        4*e30^2 + 1)*x2*x4 + 1/3*(e30^7 - e30^3 - e30^2 + 
        1)*x3*x4 + 1/3*(e30^7 - e30^3 - e30^2 + 1)*x4^2 + 
        1/3*(-5*e30^7 + 5*e30^3 + 5*e30^2 + 1)*x1*x5 + 
        1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x2*x5 + 
        1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x3*x5 + 
        1/3*(e30^7 - e30^3 - e30^2 + 1)*x4*x5 + 1/3*(-2*e30^7 + 
        2*e30^3 + 2*e30^2 + 1)*x5^2,
    1/3*(e30^7 - e30^3 - e30^2 + 1)*x1^2 + 1/3*(e30^7 - 
        e30^3 - e30^2 + 1)*x1*x2 + 1/3*(-2*e30^7 + 2*e30^3 + 
        2*e30^2 + 1)*x2^2 + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 
        1)*x1*x3 + 1/3*(-5*e30^7 + 5*e30^3 + 5*e30^2 + 1)*x2*x3 + 
        1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x3^2 + 
        1/3*(4*e30^7 - 4*e30^3 - 4*e30^2 + 1)*x1*x4 + 
        1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x2*x4 + 
        1/3*(e30^7 - e30^3 - e30^2 + 1)*x3*x4 + 1/3*(e30^7 - 
        e30^3 - e30^2 + 1)*x4^2 + 1/3*(e30^7 - e30^3 - e30^2
        + 1)*x1*x5 + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x2*x5 + 
        1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x3*x5 + 
        1/3*(e30^7 - e30^3 - e30^2 + 1)*x4*x5 + 1/3*(e30^7 - 
        e30^3 - e30^2 - 2)*x5^2,
    1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 + 1)*x1^2 + 1/3*(-5*e30^7 
        + 5*e30^3 + 5*e30^2 + 1)*x1*x2 + 1/3*(-2*e30^7 + 2*e30^3
        + 2*e30^2 + 1)*x2^2 + 1/3*(-2*e30^7 + 2*e30^3 + 2*e30^2 
        + 1)*x1*x3 + 1/3*(e30^7 - e30^3 - e30^2 + 1)*x2*x3 + 
        1/3*(e30^7 - e30^3 - e30^2 + 1)*x3^2 + 1/3*(-2*e30^7 + 
        2*e30^3 + 2*e30^2 + 1)*x1*x4 + 1/3*(-2*e30^7 + 2*e30^3 +
        2*e30^2 + 1)*x2*x4 + 1/3*(e30^7 - e30^3 - e30^2 + 
        1)*x3*x4 + 1/3*(e30^7 - e30^3 - e30^2 - 2)*x4^2 + 
        1/3*(e30^7 - e30^3 - e30^2 + 1)*x1*x5 + 1/3*(-2*e30^7 + 
        2*e30^3 + 2*e30^2 + 1)*x2*x5 + 1/3*(4*e30^7 - 4*e30^3 - 
        4*e30^2 + 1)*x3*x5 + 1/3*(e30^7 - e30^3 - e30^2 + 
        1)*x4*x5 + 1/3*(e30^7 - e30^3 - e30^2 + 1)*x5^2
]>;

C81:=inv1(C42);
Degree(C81);
C82:=inv2(C41);
Degree(C82);

C161:=inv2(C81);
Degree(C161);

C162:=inv1(C82);
Degree(C162);

extrainv:=Matrix(K,5,5,[0,0,1,0,-1,0,0,0,1,-1,1,0,0,0,-1,0,1,0,0,-1,0,0,0,0,-1]);
nG:=sub<M|G,extrainv>;


